{"version":3,"sources":["assets/svg/icons.svg","components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Player.js","components/AddPlayer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Stats","props","totalPlayers","players","length","totalPoints","reduce","total","player","score","className","scope","Stopwatch","state","isRunning","previousTime","totalTime","setTwoDigital","number","ticking","now","Date","setState","prevState","handleStopwatch","handleReset","this","intervalId","setInterval","clearInterval","minutes","Math","floor","seconds","cSeconds","onClick","Component","Header","Counter","index","changeScore","viewBox","href","plus","Player","remove","id","icons","name","AddPlayer","newPlayer","handleAddPlayer","e","target","value","handleSubmit","preventDefault","addPlayer","onSubmit","onChange","placeholder","type","required","App","handleRemovePlayer","filter","a","handleScoreChange","operation","handlePlayerAddition","parseInt","map","key","toString","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b54a3a41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons.4fff1f6e.svg\";","import React from 'react';\nimport '../scss/Stats.scss';\n\nconst Stats = (props) => {\n\n  const totalPlayers = props.players.length;\n  const totalPoints = props.players.reduce((total, player) => {\n    return total + player.score\n  }, 0);\n\n  return (\n    <table className=\"Stats\">\n      <caption className=\"visuallyhidden\">Players Stats</caption>\n      <tbody>\n        <tr className=\"Stats__row\">\n          <th className=\"Stats__header\" scope=\"row\">Players Number:</th>\n          <td className=\"Stats__data\">{totalPlayers}</td>\n        </tr>\n        <tr className=\"Stats__row\">\n          <th className=\"Stats__header\" scope=\"row\">Total Points:</th>\n          <td className=\"Stats__data\">{totalPoints}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\nexport default Stats;","import React, { Component } from 'react';\nimport '../scss/Stopwatch.scss';\n\nclass Stopwatch extends Component {\n  state = {\n    isRunning: false,\n    previousTime: 0,\n    totalTime: 0\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => this.ticking(), 10);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  setTwoDigital = (number) => {\n    return number < 10 ? `0${number}` : number;\n  }\n\n  ticking = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n\n      this.setState(prevState => ({\n        previousTime: now,\n        totalTime: prevState.totalTime + (now - this.state.previousTime)\n      }));\n    }\n  }\n\n  handleStopwatch = () => {\n    const { isRunning } = this.state;\n    this.setState(prevState => ({\n      isRunning: !prevState.isRunning\n    }));\n\n    if (!isRunning) this.setState({ previousTime: Date.now() });\n  }\n\n  handleReset = () => this.setState({ totalTime: 0 });\n\n  render() {\n    const {isRunning, totalTime} = this.state;\n    const minutes = this.setTwoDigital(Math.floor(totalTime / 60000) % 60);\n    const seconds = this.setTwoDigital(Math.floor(totalTime / 1000) % 60);\n    const cSeconds = this.setTwoDigital(Math.floor(totalTime / 10) % 100);\n\n    return (\n      <section className=\"Stopwatch\">\n        <h2 className=\"Stopwatch__header\">Stopwatch</h2>\n        <div className=\"Stopwatch__display\">\n          <span className=\"Stopwatch__time\">{minutes}</span>\n          <span className=\"Stopwatch__time\">{seconds}</span>\n          <span className=\"Stopwatch__time\">{cSeconds}</span>\n        </div>\n        <button\n          className=\"Stopwatch__button Stopwatch__button--start\"\n          onClick={this.handleStopwatch}\n        >\n          {isRunning ? 'Stop' : 'Start'}\n        </button>\n        <button\n          className=\"Stopwatch__button Stopwatch__button--reset\"\n          onClick={this.handleReset}\n        >\n          Reset\n        </button>\n      </section>\n    );\n  }\n}\nexport default Stopwatch;","import React from 'react';\nimport Stats from './Stats';\nimport Stopwatch from './Stopwatch';\nimport '../scss/Header.scss';\n\nconst Header = (props) => {\n  return (\n    <header className=\"Header\">\n      <Stats\n        players={props.players}\n      />\n      <h1 className=\"Header__heading\">Score Table</h1>\n      <Stopwatch />\n    </header>\n  );\n}\nexport default Header;","import React from 'react';\nimport plus from '../assets/svg/icons.svg'\nimport '../scss/Counter.scss'\n\nconst Counter = (props) => {\n  \n  const index = props.index;\n\n  return (\n    <div className=\"Counter\">\n\n      <button\n        className=\"button Counter__button Counter__button--js-minus\"\n        onClick={() => props.changeScore(index, -1)}\n      >\n        <svg className=\"Counter__svg\" viewBox=\"0 0 512 512\">\n          <use href={`${plus}#minus`}></use>\n        </svg>\n      </button>\n\n      <p className=\"Counter__score\">{props.score}</p>\n\n      <button\n        className=\"button Counter__button Counter__button--js-plus\"\n        onClick={() => props.changeScore(index, +1)}\n      >\n        <svg className=\"Counter__svg\" viewBox=\"0 0 512 512\">\n          <use href={`${plus}#plus`}></use>\n        </svg>\n      </button>\n\n    </div>\n  );\n}\n\nexport default Counter;","import React from 'react';\nimport Counter from './Counter';\nimport icons from '../assets/svg/icons.svg'\nimport '../scss/Player.scss';\n\nconst Player = (props) => {\n  return (\n    <section className=\"Player\">\n      <button\n        className=\"button Player__button\"\n        onClick={() => props.remove(props.id)}\n      >\n        <svg className=\"Player__svg\" viewBox=\"0 0 512 512\">\n          <use href={`${icons}#remove`}></use>\n        </svg>\n      </button>\n\n      <svg className=\"Player__crown\" viewBox=\"0 0 512 512\">\n        <use href={`${icons}#crown`}></use>\n      </svg>\n\n      <h2 className=\"Player__heading\">\n        {props.name}\n      </h2>\n\n      <Counter\n        score={props.score}\n        changeScore={props.changeScore}\n        index={props.index}\n      />\n    </section>\n  );\n}\n\nexport default Player;","import React, { Component } from 'react';\r\nimport '../scss/AddPlayer.scss';\r\n\r\nclass AddPlayer extends Component {\r\n  state = {\r\n    newPlayer: ''\r\n  }\r\n\r\n  handleAddPlayer = (e) => {\r\n    this.setState({ newPlayer: e.target.value });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    const { newPlayer } = this.state;\r\n    e.preventDefault();\r\n    this.props.addPlayer(newPlayer);\r\n    this.setState({ newPlayer: '' })\r\n  }\r\n\r\n  render() {\r\n    const { newPlayer } = this.state;\r\n    return (\r\n      <form\r\n        className=\"AddPlayer\"\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <input\r\n          className=\"AddPlayer__input AddPlayer__input--text\"\r\n          onChange={this.handleAddPlayer}\r\n          placeholder=\"New Player's Name\"\r\n          type=\"text\"\r\n          value={newPlayer}\r\n          required\r\n        />\r\n        <input\r\n          className=\"AddPlayer__input AddPlayer__input--button\"\r\n          type=\"submit\"\r\n          value=\"Add Player\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default AddPlayer;","import React, {Component} from 'react';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayer from './AddPlayer';\nimport '../scss/App.scss';\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        id: \"1\",\n        name: \"Ania\",\n        score: 0\n      },\n      {\n        id: \"2\",\n        name: \"Agnieszka\",\n        score: 0\n      },\n      {\n        id: \"3\",\n        name: \"Olek\",\n        score: 0\n      },\n      {\n        id: \"4\",\n        name: \"Kuba\",\n        score: 0\n      }\n    ]\n  };\n\n  handleRemovePlayer = (id) => {\n    this.setState(prevState => ({\n      players: prevState.players.filter(a => a.id !== id)\n    }));\n  }\n\n  handleScoreChange = (index, operation) => {\n    const {players} = this.state;\n    this.setState(prevState => {\n      return operation === -1 && players[index].score <= 0\n      ? 0\n      : { score: prevState.players[index].score += operation };\n    });\n  }\n\n  handlePlayerAddition = (name) => {\n    const { players } = this.state;\n    const id = parseInt(players[players.length-1].id) + 1;\n    this.setState((prevState) => ({\n        players: [...prevState.players,\n          { id, name, score: 0 }\n        ]\n    }));\n  }\n\n  render() {\n    const {players} = this.state;\n    return (\n      <div className=\"App\">\n        <Header\n          players={players}\n        />\n\n        {/* PLAYERS LIST */}\n        {this.state.players.map((player, index) => \n          <Player\n            changeScore={this.handleScoreChange}\n            id={player.id}\n            index={index}\n            key={player.id.toString()}\n            name={player.name}\n            remove={this.handleRemovePlayer}\n            score={player.score}\n          />\n        )}\n\n        <AddPlayer\n          addPlayer={this.handlePlayerAddition}\n        />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}